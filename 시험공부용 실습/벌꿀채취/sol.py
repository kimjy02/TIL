'''
    N X N개의 벌통이 정사각형 모양으로 배치
    각 칸의 숫자는 각 벌통에 있는 꿀의 양 / 꿀의 양은 서로 다를 수 있음
    
    각 벌통에 있는 꿀의 양이 주어졌을 때, 다음과 같은 과정으로 벌꿀을 채취하여 최대한 많은 수익을 얻으려고 함.
    
        1. 두 명의 일꾼이 채취할 수 있는 벌통의 수는 M개
           각 일꾼은 가로로 연속되도록 M개의 벌통을 선택하고, 선택한 벌통에서 꿀을 채취할 수 있음
           단, 두 명의 일꾼이 선택한 벌통은 서로 겹치면 안됨
        
        2. 두 명의 일꾼은 선택한 벌통에서 꿀을 채취하여 용기에 담아야 함
           단, 서로 다른 벌통에서 채취한 꿀이 섞이게 되면 상품가치가 떨어지므로, 하나의 벌통에서 채취한 꿀은 하나의 용기에 담아야함
           하나의 벌통에서 꿀을 채취할 때, 일부분만 채취할 수 없고 벌통에 있는 모든 꾸릉ㄹ 한번에 채취해야 함
           두 일꾼이 채취할 수 있는 최대 양은 C
           
           ex) C = 10, 두 명의 일꾼이 선택한 벌꿀이 [6, 1] , [8, 5]일 때,
               첫번째 일꾼은 꿀의 양이 6과 1인  두 개의 벌통에서 모두 꿀을 채취
               두번째 일꾼은 꿀의 양이 8과 5인 두 개의 벌통에서 모두 꿀을 채취할 경우,
               채취한 꿀의 양이 13이 되어 C를 초과하기 때문에 두 개의 벌통에서 모두 꿀을 채취할 수 없다.
               따라서 두 번째 일꾼은 꿀의 양이 8과 5인 벌통 중 하나를 선택해 꿀을 채취해야 함
        
        3. 채취한 꿀은 시장에서 판매
           하나의 용기에 있는 꿀의 양이 많을수록 상품가치가 높아, 각 용기에 있는 꿀의 양의 제곱만큼의 수익 생김
           ex) 6 1 8인 3개의 용기가 얻어졌을 때의 수익의 합은 (6X6)+(1X1)+(8X8)=36+1+64=101이 됨 
           
           벌통들의 크기 N과 벌통에 있는 꿀의 양에 대한 정보, 선택할 수 있는 벌통의 개수 M, 꿀을 채취할 수 있는 최대 양 C
           두 일꾼이 꿀을 채취하여 얻을 수 있는 수익의 합이 최대가 되는 경우를 찾고, 그때의 최대 수익을 출력하는 프로그램 작성
           
    [제약사항]
        1. 시간 제한
        2. 3 <= N <= 10
        3. 1 <= M <= 5, N
        4.  10 <= C <= 30
        5. 1 <= 한 벌통에서 채취할 수 있는 꿀의 양 <= 9
        6. 하나의 벌통에서 일부분의 꿀만 채취할 수 없고, 벌통에 있는 모든 꿀을 한 번에 채취해야 함
        
    [입력]
        1. T : 테스트 케이스 수
        2. N : 벌통들의 크기 / M : 선택할 수 있는 벌통의 개수 / C : 꿀을 채취할 수 있는 최대 양
        3. N X N : 벌통에서 채취할 수 있는 꿀의 양에 대한 정보

    [출력]
        - #{tc} {두 일꾼이 꿀을 채취하여 얻을 수 있는 최대 수익}
'''

import sys
sys.stdin = open('sample_input.txt')

import itertools

T = int(input())

for tc in range(1, T+1):
    N, M, C = map(int, input().split())
    info = [list(map(int, input().split())) for _ in range(N)]
    # print(info)
