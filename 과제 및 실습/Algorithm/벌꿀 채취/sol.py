'''
    N X N 개의 벌통이 정사각형 모양으로 배치되어 있다.
    각 칸의 숫자는 각각의 벌통에 있는 꿀의 양
    각 벌통에 있는 굴의 양이 주어졌을 때, 다음과 같은 과정으로 벌꿀을 채취하여 최대한 많은 수익을 얻으려 한다.

        1. 두 명의 일꾼이 있다. 꿀을 채취할 수 있는 벌통의 수 M이 주어질 때,
           각각 일꾼은 가로로 연속되도록 M개의 벌통을 선택하고, 선택한 벌통에서 꿀을 채취할 수 있다.
           단, 두 명의 일꾼이 선택한 벌통은 서로 겹치면 안 된다.

        2. 두 명의 일꾼은 선택한 벌통에서 꿀을 채취하여 용기에 담아야 함.
           단, 서로 다른 벌통에서 채취한 꿀이 섞이게 되면 상품가치가 떨어지게 되므로,
           하나의 벌통에서 채취한 꿀은 하나의 용기에 담아야 한다.
           하나의 벌통에서 꿀을 채취할 때, 일부분만 채취할 수 없고 벌통에 있는 모든 꿀을 한 번에 채취해야 한다.
           두 일 꾼이 채취할 수 있는 최대 양 : C

        3. 채취한 꿀은 시장에서 팔리게 된다.
           이 때 하나의 용기에 있는 꿀의 양이 많을수록 상품가치가 높아, 각 용기에 있는 꿀의 야의 제곱만큼의 수익이 생긴다.

    제약 사항
        1. 시간 제한 : 50개 테스트 케이스 - 6초
        2. 벌통의 크기 N : 3 이상 10 이하의 정수
        3. 선택할 수 있는 벌통의 개수 M : 1 이상 5 이하의 정수
        4. M은 반드시 N 이하로만 주어진다.
        5. 꿀을 채취할 수 있는 최대 양 C : 10 이상 30 이하의 정수
        6. 하나의 벌통에서 채취할 수 있는 꿀의 양 : 1 이상 9 이하의 정수
        7. 하나의 벌통에서 일부분만 채취할 수 없고, 벌통에 있는 모든 꿀을 한 번에 채취해야 함

    입력
        - 첫 번째 줄 : T - 테스트 케이스 수
        - 두 번째 줄 : N - 각 테스트 케이스의 벌통들의 크기 / M - 각 테스트 케이스의 벌통의 개수 / C - 각 테스트 케이스의 꿀을 채취할 수 있는 최대 양
        - 세 번째 줄 : N X N개의 벌통에서 채취할 수 있는 꿀의 양

    출력
        - #tc {두 일꾼이 꿀을 채취하여 얻을 수 있는 최대 수익}
'''
import sys
sys.stdin = open('sample_input.txt')

import itertools

def select_hive(N, M, C, list):
    total = []
    stack = []
    for row in list:
        for i in range(N+M-2):
            if row[i]+row[i+1] <= C:
                if
                total.append(list[i])

                stack.append(i)
                stack.append(i+1)

T = int(input())
for tc in range(1, T+1):
    N, M, C = map(int, input().split())
    hive = [[0] * N for _ in range(N)]
    # print(hive)
    for i in range(N):
        hive[i] = list(map(int, input().split()))
    print(hive)

